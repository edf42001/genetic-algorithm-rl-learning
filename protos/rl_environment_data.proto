syntax = "proto3";

option java_package = "protos";

// The environment data service
service EnvironmentService {
  // Sends data, gets an action
  rpc SendEnvironment (EnvironmentRequest) returns (ActionResponse) {}

  // Send who won
  rpc SendWinner (WinnerRequest) returns (Empty) {}
}

// Send who won
message WinnerRequest {
    int32 winner = 1; // 0 or 1, or -1 if tie

    // The player who is sending this data
    int32 player_id = 2;
}


// Send one state and reward info per agent
message EnvironmentRequest {
    repeated Environment agent_data = 1;

     // Which player on the board this data belongs to
    int32 player_id = 2;
}

// The request message, tells the agent the current environment state
// And the last reward for their last action
message Environment {
  repeated int32 state = 1;
  float last_action_reward = 2;
  int32 unit_id = 3;
}

// The response message, what action the agent wants to preform
// Each action corresponds to an agent
message ActionResponse {
  repeated int32 action = 1;
}

message Empty {
}